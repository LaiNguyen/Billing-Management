package model;
// Generated Mar 23, 2017 10:43:43 AM by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.hibernate.HibernateException;
import util.HibernateUtil;

/**
 * Billing generated by hbm2java
 */
public class Billing  implements java.io.Serializable, Persistence {

    private int id;
    private int tableId;
    private float drinkCost;
    private float drinkCapital;
    private float foodCost;
    private float foodCapital;
    private float totalRevenue;
    private float totalCapital;
    private Short status;
    private Date createdAt;
    private Date updatedAt;
    private String createdBy;
    private String updatedBy;
    
    // billing status static property
    public static Short STATUS_CURRENT = 0;
    public static Short STATUS_PAID = 1;
    public static Map<Short, String> STATUS_DEFINITION;
    static {
        STATUS_DEFINITION = new HashMap<>();
        STATUS_DEFINITION.put(STATUS_CURRENT, "Chưa thanh toán");
        STATUS_DEFINITION.put(STATUS_PAID, "Đã thanh toán");
    }
    
    // billing query static property
    private static String QUERY_BASED_ON_TABLE_ID = "from Billing a where a.status=0 AND a.tableId =";

    public float getDrinkCost() {
        return drinkCost;
    }

    public void setDrinkCost(float drinkCost) {
        this.drinkCost = drinkCost;
    }

    public float getFoodCost() {
        return foodCost;
    }

    public void setFoodCost(float foodCost) {
        this.foodCost = foodCost;
    }

    public Short getStatus() {
        return status;
    }

    public void setStatus(Short status) {
        this.status = status;
    }

    public Billing() {
        this.drinkCost = 0;
        this.drinkCapital = 0;
        this.foodCost = 0;
        this.foodCapital = 0;
        this.totalRevenue = 0;
        this.totalCapital = 0;
        this.status = STATUS_CURRENT;
        this.createdAt = new Date();
        this.updatedAt = new Date();
        this.createdBy = "Lai";
        this.updatedBy = "Lai";
    }

	
    public Billing(short tableId) {
        this.tableId = tableId;
    }
    public Billing(short tableId, Date createdAt, Date updatedAt, String createdBy, String updatedBy) {
       this.tableId = tableId;
       this.createdAt = createdAt;
       this.updatedAt = updatedAt;
       this.createdBy = createdBy;
       this.updatedBy = updatedBy;
    }
   
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    public int getTableId() {
        return this.tableId;
    }
    
    public void setTableId(int tableId) {
        this.tableId = tableId;
    }
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }
    public Date getUpdatedAt() {
        return this.updatedAt;
    }
    
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }
    public String getUpdatedBy() {
        return this.updatedBy;
}
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    public float getDrinkCapital() {
        return drinkCapital;
    }

    public void setDrinkCapital(float drinkCapital) {
        this.drinkCapital = drinkCapital;
    }

    public float getFoodCapital() {
        return foodCapital;
    }

    public void setFoodCapital(float foodCapital) {
        this.foodCapital = foodCapital;
    }

    public float getTotalRevenue() {
        return totalRevenue;
    }

    public void setTotalRevenue(float totalRevenue) {
        this.totalRevenue = totalRevenue;
    }

    public float getTotalCapital() {
        return totalCapital;
    }

    public void setTotalCapital(float totalCapital) {
        this.totalCapital = totalCapital;
    }
    
    
    
    public static List<Billing> getAll() {
        List<Billing> all = new ArrayList<Billing>();
        all = HibernateUtil.executeSelectHQLQuery("from Tables");
        return all;
    }

    public boolean insert() {
        try {
            this.id = HibernateUtil.executeInsertHQLQuery(this);
        } catch (HibernateException he) {
            System.out.println("error while run func HibernateUtil.executeInsertHQLQuery to insert Dish record: " + he.getMessage());
            return false;
        }
        return true;
    }
    
    public boolean update() {
        String query = String.format("update Billing set table_id=%d, drink_cost=%f, drink_capital=%f, food_cost=%f, food_capital=%f, total_revenue=%f, total_capital=%f, status=%d, updated_at=NOW() where id=%d",
                this.tableId, this.drinkCost, this.drinkCapital, this.foodCost, this.foodCapital, this.totalRevenue, this.totalCapital, this.status, this.id);
        try {
            HibernateUtil.executeUpdateHQLQuery(query);
        } catch (HibernateException he) {
            System.out.println("error while run func HibernateUtil.executeUpdateHQLQuery to update Billing record: " + he.getMessage());
            return false;
        }
        return true;
    }
            
    public static Billing findCurentByTableId(int tableId) {
        String query = QUERY_BASED_ON_TABLE_ID + tableId;
        List<Billing> result = new ArrayList<Billing>();
        result = HibernateUtil.executeSelectHQLQuery(query);
        if (result.size() > 0) {
            return result.get(0);            
        }
        return null;
    }
    
    public static List<Billing> findByDate(Date from, Date to) {
        String query = String.format("from Billing a where a.createdAt between '%s' and '%s' order by a.createdAt desc", from, to);
        List<Billing> result = new ArrayList<Billing>();
        result = HibernateUtil.executeSelectHQLQuery(query);
        return result;
    }
}


